//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication1.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DoctorData", Namespace="http://schemas.datacontract.org/2004/07/HospitalService")]
    [System.SerializableAttribute()]
    public partial class DoctorData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNreValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SocNrValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstNameValue {
            get {
                return this.FirstNameValueField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameValueField, value) != true)) {
                    this.FirstNameValueField = value;
                    this.RaisePropertyChanged("FirstNameValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdValue {
            get {
                return this.IdValueField;
            }
            set {
                if ((this.IdValueField.Equals(value) != true)) {
                    this.IdValueField = value;
                    this.RaisePropertyChanged("IdValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastNameValue {
            get {
                return this.LastNameValueField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameValueField, value) != true)) {
                    this.LastNameValueField = value;
                    this.RaisePropertyChanged("LastNameValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNreValue {
            get {
                return this.PhoneNreValueField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNreValueField, value) != true)) {
                    this.PhoneNreValueField = value;
                    this.RaisePropertyChanged("PhoneNreValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SocNrValue {
            get {
                return this.SocNrValueField;
            }
            set {
                if ((object.ReferenceEquals(this.SocNrValueField, value) != true)) {
                    this.SocNrValueField = value;
                    this.RaisePropertyChanged("SocNrValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PatientData", Namespace="http://schemas.datacontract.org/2004/07/HospitalService")]
    [System.SerializableAttribute()]
    public partial class PatientData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNreValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SocNrValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipCodeValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstNameValue {
            get {
                return this.FirstNameValueField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameValueField, value) != true)) {
                    this.FirstNameValueField = value;
                    this.RaisePropertyChanged("FirstNameValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdValue {
            get {
                return this.IdValueField;
            }
            set {
                if ((this.IdValueField.Equals(value) != true)) {
                    this.IdValueField = value;
                    this.RaisePropertyChanged("IdValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastNameValue {
            get {
                return this.LastNameValueField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameValueField, value) != true)) {
                    this.LastNameValueField = value;
                    this.RaisePropertyChanged("LastNameValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNreValue {
            get {
                return this.PhoneNreValueField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNreValueField, value) != true)) {
                    this.PhoneNreValueField = value;
                    this.RaisePropertyChanged("PhoneNreValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SocNrValue {
            get {
                return this.SocNrValueField;
            }
            set {
                if ((object.ReferenceEquals(this.SocNrValueField, value) != true)) {
                    this.SocNrValueField = value;
                    this.RaisePropertyChanged("SocNrValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZipCodeValue {
            get {
                return this.ZipCodeValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipCodeValueField, value) != true)) {
                    this.ZipCodeValueField = value;
                    this.RaisePropertyChanged("ZipCodeValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JournalData", Namespace="http://schemas.datacontract.org/2004/07/HospitalService")]
    [System.SerializableAttribute()]
    public partial class JournalData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateTimeValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DoctorIdValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientIdValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateTimeValue {
            get {
                return this.DateTimeValueField;
            }
            set {
                if ((this.DateTimeValueField.Equals(value) != true)) {
                    this.DateTimeValueField = value;
                    this.RaisePropertyChanged("DateTimeValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DoctorIdValue {
            get {
                return this.DoctorIdValueField;
            }
            set {
                if ((this.DoctorIdValueField.Equals(value) != true)) {
                    this.DoctorIdValueField = value;
                    this.RaisePropertyChanged("DoctorIdValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdValue {
            get {
                return this.IdValueField;
            }
            set {
                if ((this.IdValueField.Equals(value) != true)) {
                    this.IdValueField = value;
                    this.RaisePropertyChanged("IdValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientIdValue {
            get {
                return this.PatientIdValueField;
            }
            set {
                if ((this.PatientIdValueField.Equals(value) != true)) {
                    this.PatientIdValueField = value;
                    this.RaisePropertyChanged("PatientIdValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HospitalPostlData", Namespace="http://schemas.datacontract.org/2004/07/HospitalService")]
    [System.SerializableAttribute()]
    public partial class HospitalPostlData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateTimeValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DoctorIdValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> JournalIdValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateTimeValue {
            get {
                return this.DateTimeValueField;
            }
            set {
                if ((this.DateTimeValueField.Equals(value) != true)) {
                    this.DateTimeValueField = value;
                    this.RaisePropertyChanged("DateTimeValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DoctorIdValue {
            get {
                return this.DoctorIdValueField;
            }
            set {
                if ((this.DoctorIdValueField.Equals(value) != true)) {
                    this.DoctorIdValueField = value;
                    this.RaisePropertyChanged("DoctorIdValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdValue {
            get {
                return this.IdValueField;
            }
            set {
                if ((this.IdValueField.Equals(value) != true)) {
                    this.IdValueField = value;
                    this.RaisePropertyChanged("IdValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> JournalIdValue {
            get {
                return this.JournalIdValueField;
            }
            set {
                if ((this.JournalIdValueField.Equals(value) != true)) {
                    this.JournalIdValueField = value;
                    this.RaisePropertyChanged("JournalIdValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostValue {
            get {
                return this.PostValueField;
            }
            set {
                if ((object.ReferenceEquals(this.PostValueField, value) != true)) {
                    this.PostValueField = value;
                    this.RaisePropertyChanged("PostValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DoctorXPatientData", Namespace="http://schemas.datacontract.org/2004/07/HospitalService")]
    [System.SerializableAttribute()]
    public partial class DoctorXPatientData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DoctorIdValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HospitalValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientIdValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DoctorIdValue {
            get {
                return this.DoctorIdValueField;
            }
            set {
                if ((this.DoctorIdValueField.Equals(value) != true)) {
                    this.DoctorIdValueField = value;
                    this.RaisePropertyChanged("DoctorIdValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HospitalValue {
            get {
                return this.HospitalValueField;
            }
            set {
                if ((object.ReferenceEquals(this.HospitalValueField, value) != true)) {
                    this.HospitalValueField = value;
                    this.RaisePropertyChanged("HospitalValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdValue {
            get {
                return this.IdValueField;
            }
            set {
                if ((this.IdValueField.Equals(value) != true)) {
                    this.IdValueField = value;
                    this.RaisePropertyChanged("IdValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientIdValue {
            get {
                return this.PatientIdValueField;
            }
            set {
                if ((this.PatientIdValueField.Equals(value) != true)) {
                    this.PatientIdValueField = value;
                    this.RaisePropertyChanged("PatientIdValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HospitalPostlDataWithPatientName", Namespace="http://schemas.datacontract.org/2004/07/HospitalService")]
    [System.SerializableAttribute()]
    public partial class HospitalPostlDataWithPatientName : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateTimeValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DoctorIdValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> JournalIdValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string patientFirstNameValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string patientLastNameValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateTimeValue {
            get {
                return this.DateTimeValueField;
            }
            set {
                if ((this.DateTimeValueField.Equals(value) != true)) {
                    this.DateTimeValueField = value;
                    this.RaisePropertyChanged("DateTimeValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DoctorIdValue {
            get {
                return this.DoctorIdValueField;
            }
            set {
                if ((this.DoctorIdValueField.Equals(value) != true)) {
                    this.DoctorIdValueField = value;
                    this.RaisePropertyChanged("DoctorIdValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdValue {
            get {
                return this.IdValueField;
            }
            set {
                if ((this.IdValueField.Equals(value) != true)) {
                    this.IdValueField = value;
                    this.RaisePropertyChanged("IdValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> JournalIdValue {
            get {
                return this.JournalIdValueField;
            }
            set {
                if ((this.JournalIdValueField.Equals(value) != true)) {
                    this.JournalIdValueField = value;
                    this.RaisePropertyChanged("JournalIdValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostValue {
            get {
                return this.PostValueField;
            }
            set {
                if ((object.ReferenceEquals(this.PostValueField, value) != true)) {
                    this.PostValueField = value;
                    this.RaisePropertyChanged("PostValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string patientFirstNameValue {
            get {
                return this.patientFirstNameValueField;
            }
            set {
                if ((object.ReferenceEquals(this.patientFirstNameValueField, value) != true)) {
                    this.patientFirstNameValueField = value;
                    this.RaisePropertyChanged("patientFirstNameValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string patientLastNameValue {
            get {
                return this.patientLastNameValueField;
            }
            set {
                if ((object.ReferenceEquals(this.patientLastNameValueField, value) != true)) {
                    this.patientLastNameValueField = value;
                    this.RaisePropertyChanged("patientLastNameValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDoctors", ReplyAction="http://tempuri.org/IService1/GetDoctorsResponse")]
        WebApplication1.ServiceReference1.DoctorData[] GetDoctors();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDoctors", ReplyAction="http://tempuri.org/IService1/GetDoctorsResponse")]
        System.Threading.Tasks.Task<WebApplication1.ServiceReference1.DoctorData[]> GetDoctorsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSpecificDoctor", ReplyAction="http://tempuri.org/IService1/GetSpecificDoctorResponse")]
        WebApplication1.ServiceReference1.DoctorData GetSpecificDoctor(System.Nullable<int> doctorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSpecificDoctor", ReplyAction="http://tempuri.org/IService1/GetSpecificDoctorResponse")]
        System.Threading.Tasks.Task<WebApplication1.ServiceReference1.DoctorData> GetSpecificDoctorAsync(System.Nullable<int> doctorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetPatients", ReplyAction="http://tempuri.org/IService1/GetPatientsResponse")]
        WebApplication1.ServiceReference1.PatientData[] GetPatients();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetPatients", ReplyAction="http://tempuri.org/IService1/GetPatientsResponse")]
        System.Threading.Tasks.Task<WebApplication1.ServiceReference1.PatientData[]> GetPatientsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetJournals", ReplyAction="http://tempuri.org/IService1/GetJournalsResponse")]
        WebApplication1.ServiceReference1.JournalData[] GetJournals();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetJournals", ReplyAction="http://tempuri.org/IService1/GetJournalsResponse")]
        System.Threading.Tasks.Task<WebApplication1.ServiceReference1.JournalData[]> GetJournalsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetHospitalPosts", ReplyAction="http://tempuri.org/IService1/GetHospitalPostsResponse")]
        WebApplication1.ServiceReference1.HospitalPostlData[] GetHospitalPosts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetHospitalPosts", ReplyAction="http://tempuri.org/IService1/GetHospitalPostsResponse")]
        System.Threading.Tasks.Task<WebApplication1.ServiceReference1.HospitalPostlData[]> GetHospitalPostsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDoctorXPatients", ReplyAction="http://tempuri.org/IService1/GetDoctorXPatientsResponse")]
        WebApplication1.ServiceReference1.DoctorXPatientData[] GetDoctorXPatients();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDoctorXPatients", ReplyAction="http://tempuri.org/IService1/GetDoctorXPatientsResponse")]
        System.Threading.Tasks.Task<WebApplication1.ServiceReference1.DoctorXPatientData[]> GetDoctorXPatientsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CheckLogIn", ReplyAction="http://tempuri.org/IService1/CheckLogInResponse")]
        WebApplication1.ServiceReference1.DoctorData CheckLogIn(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CheckLogIn", ReplyAction="http://tempuri.org/IService1/CheckLogInResponse")]
        System.Threading.Tasks.Task<WebApplication1.ServiceReference1.DoctorData> CheckLogInAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ImportNewDoctor", ReplyAction="http://tempuri.org/IService1/ImportNewDoctorResponse")]
        bool ImportNewDoctor(string firstname, string lastname, string soc, string phonenumber, string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ImportNewDoctor", ReplyAction="http://tempuri.org/IService1/ImportNewDoctorResponse")]
        System.Threading.Tasks.Task<bool> ImportNewDoctorAsync(string firstname, string lastname, string soc, string phonenumber, string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ImportNewPatient", ReplyAction="http://tempuri.org/IService1/ImportNewPatientResponse")]
        bool ImportNewPatient(int journalId, string soc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ImportNewPatient", ReplyAction="http://tempuri.org/IService1/ImportNewPatientResponse")]
        System.Threading.Tasks.Task<bool> ImportNewPatientAsync(int journalId, string soc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateNewPatient", ReplyAction="http://tempuri.org/IService1/CreateNewPatientResponse")]
        bool CreateNewPatient(string userEmail, string password, string firstname, string lastname, string soc, string phonenr, string zipcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateNewPatient", ReplyAction="http://tempuri.org/IService1/CreateNewPatientResponse")]
        System.Threading.Tasks.Task<bool> CreateNewPatientAsync(string userEmail, string password, string firstname, string lastname, string soc, string phonenr, string zipcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateDoctorInformation", ReplyAction="http://tempuri.org/IService1/UpdateDoctorInformationResponse")]
        string UpdateDoctorInformation(int doctorId, string newEmail, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateDoctorInformation", ReplyAction="http://tempuri.org/IService1/UpdateDoctorInformationResponse")]
        System.Threading.Tasks.Task<string> UpdateDoctorInformationAsync(int doctorId, string newEmail, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateHospitalPost", ReplyAction="http://tempuri.org/IService1/CreateHospitalPostResponse")]
        bool CreateHospitalPost(int doctorId, int patientId, string post);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateHospitalPost", ReplyAction="http://tempuri.org/IService1/CreateHospitalPostResponse")]
        System.Threading.Tasks.Task<bool> CreateHospitalPostAsync(int doctorId, int patientId, string post);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetHospitalPostForPatient", ReplyAction="http://tempuri.org/IService1/GetHospitalPostForPatientResponse")]
        WebApplication1.ServiceReference1.HospitalPostlData[] GetHospitalPostForPatient(int patientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetHospitalPostForPatient", ReplyAction="http://tempuri.org/IService1/GetHospitalPostForPatientResponse")]
        System.Threading.Tasks.Task<WebApplication1.ServiceReference1.HospitalPostlData[]> GetHospitalPostForPatientAsync(int patientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetThreeLastHospitalPosts", ReplyAction="http://tempuri.org/IService1/GetThreeLastHospitalPostsResponse")]
        WebApplication1.ServiceReference1.HospitalPostlDataWithPatientName[] GetThreeLastHospitalPosts(int doctorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetThreeLastHospitalPosts", ReplyAction="http://tempuri.org/IService1/GetThreeLastHospitalPostsResponse")]
        System.Threading.Tasks.Task<WebApplication1.ServiceReference1.HospitalPostlDataWithPatientName[]> GetThreeLastHospitalPostsAsync(int doctorId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : WebApplication1.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<WebApplication1.ServiceReference1.IService1>, WebApplication1.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WebApplication1.ServiceReference1.DoctorData[] GetDoctors() {
            return base.Channel.GetDoctors();
        }
        
        public System.Threading.Tasks.Task<WebApplication1.ServiceReference1.DoctorData[]> GetDoctorsAsync() {
            return base.Channel.GetDoctorsAsync();
        }
        
        public WebApplication1.ServiceReference1.DoctorData GetSpecificDoctor(System.Nullable<int> doctorId) {
            return base.Channel.GetSpecificDoctor(doctorId);
        }
        
        public System.Threading.Tasks.Task<WebApplication1.ServiceReference1.DoctorData> GetSpecificDoctorAsync(System.Nullable<int> doctorId) {
            return base.Channel.GetSpecificDoctorAsync(doctorId);
        }
        
        public WebApplication1.ServiceReference1.PatientData[] GetPatients() {
            return base.Channel.GetPatients();
        }
        
        public System.Threading.Tasks.Task<WebApplication1.ServiceReference1.PatientData[]> GetPatientsAsync() {
            return base.Channel.GetPatientsAsync();
        }
        
        public WebApplication1.ServiceReference1.JournalData[] GetJournals() {
            return base.Channel.GetJournals();
        }
        
        public System.Threading.Tasks.Task<WebApplication1.ServiceReference1.JournalData[]> GetJournalsAsync() {
            return base.Channel.GetJournalsAsync();
        }
        
        public WebApplication1.ServiceReference1.HospitalPostlData[] GetHospitalPosts() {
            return base.Channel.GetHospitalPosts();
        }
        
        public System.Threading.Tasks.Task<WebApplication1.ServiceReference1.HospitalPostlData[]> GetHospitalPostsAsync() {
            return base.Channel.GetHospitalPostsAsync();
        }
        
        public WebApplication1.ServiceReference1.DoctorXPatientData[] GetDoctorXPatients() {
            return base.Channel.GetDoctorXPatients();
        }
        
        public System.Threading.Tasks.Task<WebApplication1.ServiceReference1.DoctorXPatientData[]> GetDoctorXPatientsAsync() {
            return base.Channel.GetDoctorXPatientsAsync();
        }
        
        public WebApplication1.ServiceReference1.DoctorData CheckLogIn(string username, string password) {
            return base.Channel.CheckLogIn(username, password);
        }
        
        public System.Threading.Tasks.Task<WebApplication1.ServiceReference1.DoctorData> CheckLogInAsync(string username, string password) {
            return base.Channel.CheckLogInAsync(username, password);
        }
        
        public bool ImportNewDoctor(string firstname, string lastname, string soc, string phonenumber, string username, string password) {
            return base.Channel.ImportNewDoctor(firstname, lastname, soc, phonenumber, username, password);
        }
        
        public System.Threading.Tasks.Task<bool> ImportNewDoctorAsync(string firstname, string lastname, string soc, string phonenumber, string username, string password) {
            return base.Channel.ImportNewDoctorAsync(firstname, lastname, soc, phonenumber, username, password);
        }
        
        public bool ImportNewPatient(int journalId, string soc) {
            return base.Channel.ImportNewPatient(journalId, soc);
        }
        
        public System.Threading.Tasks.Task<bool> ImportNewPatientAsync(int journalId, string soc) {
            return base.Channel.ImportNewPatientAsync(journalId, soc);
        }
        
        public bool CreateNewPatient(string userEmail, string password, string firstname, string lastname, string soc, string phonenr, string zipcode) {
            return base.Channel.CreateNewPatient(userEmail, password, firstname, lastname, soc, phonenr, zipcode);
        }
        
        public System.Threading.Tasks.Task<bool> CreateNewPatientAsync(string userEmail, string password, string firstname, string lastname, string soc, string phonenr, string zipcode) {
            return base.Channel.CreateNewPatientAsync(userEmail, password, firstname, lastname, soc, phonenr, zipcode);
        }
        
        public string UpdateDoctorInformation(int doctorId, string newEmail, string newPassword) {
            return base.Channel.UpdateDoctorInformation(doctorId, newEmail, newPassword);
        }
        
        public System.Threading.Tasks.Task<string> UpdateDoctorInformationAsync(int doctorId, string newEmail, string newPassword) {
            return base.Channel.UpdateDoctorInformationAsync(doctorId, newEmail, newPassword);
        }
        
        public bool CreateHospitalPost(int doctorId, int patientId, string post) {
            return base.Channel.CreateHospitalPost(doctorId, patientId, post);
        }
        
        public System.Threading.Tasks.Task<bool> CreateHospitalPostAsync(int doctorId, int patientId, string post) {
            return base.Channel.CreateHospitalPostAsync(doctorId, patientId, post);
        }
        
        public WebApplication1.ServiceReference1.HospitalPostlData[] GetHospitalPostForPatient(int patientId) {
            return base.Channel.GetHospitalPostForPatient(patientId);
        }
        
        public System.Threading.Tasks.Task<WebApplication1.ServiceReference1.HospitalPostlData[]> GetHospitalPostForPatientAsync(int patientId) {
            return base.Channel.GetHospitalPostForPatientAsync(patientId);
        }
        
        public WebApplication1.ServiceReference1.HospitalPostlDataWithPatientName[] GetThreeLastHospitalPosts(int doctorId) {
            return base.Channel.GetThreeLastHospitalPosts(doctorId);
        }
        
        public System.Threading.Tasks.Task<WebApplication1.ServiceReference1.HospitalPostlDataWithPatientName[]> GetThreeLastHospitalPostsAsync(int doctorId) {
            return base.Channel.GetThreeLastHospitalPostsAsync(doctorId);
        }
    }
}
